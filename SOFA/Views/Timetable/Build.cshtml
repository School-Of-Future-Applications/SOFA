@model SOFA.Models.Timetable

@{
    ViewBag.Title = "Build";
    ViewBag.NavItem = "Timetabling";

}
@section datePicker
{
    <script type="text/javascript">

        $(document).ready(function () {
            $('#my-dialog').dialog({
                autoOpen: false,
                width: 600,
                resizable: true,
                modal: true
            });

            $("table a.addtime").click(function (event) {
                event.preventDefault();
                $('#my-dialog').load(this.href, function () {
                    $(this).dialog('open');
                });
            });

            $("table a.addclass").click(function (event) {
                event.preventDefault();
                $('#my-dialog').load(this.href, function () {
                    $(this).dialog('open');
                });
            });
        });

        $(document).ready(function () {
            $(function () {
                $.validator.addMethod('date',
                function (value, element) {
                    if (this.optional(element)) {
                        return true;
                    }
                    var ok = true;
                    try {
                        $.datepicker.parseDate('dd/mm/yy', value);
                    }
                    catch (err) {
                        ok = false;
                    }
                    return ok;
                })
            });

            $(".datepicker").datepicker({
                dateFormat: "dd/mm/yy"
            });
        });
    </script>
}

<div class="col-md-11 col-md-offset-1">

    <h2>Build Timetable</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.TimetableCode, new { @class = "col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.TimetableCode)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TimetableIdentifier, new { @class = "col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.TimetableIdentifier)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ActiveDate, new { @class = "col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ActiveDate, new { @class = "datepicker" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpiryDate, new { @class = "col-md-2 text-right" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ExpiryDate, new { @class = "datepicker" })
                </div>
            </div>
        @{
    var timetable = Model; ;
    var timetableLines = Model.Lines;
        }
            <hr />

        <div align="left"><h3>Lines</h3> </div><div align="right">@Html.ActionLink("Add Line", "CreateLine", new { id = Model.Id })</div>
        <table class="table">
            @foreach (var line in timetableLines)
            { 
            <tr>
                <td>
                    <b>Line @Html.DisplayFor(modelItem => line.Id)</b>
                </td>

                        <td>
                            @Html.ActionLink("Add Time", "CreateLineTime", new { id = line.Id }, new { @class = "addtime" }) |
                            @Html.ActionLink("Add Class", "CreateTimetabledClass", new { id = line.Id }, new { @class = "addclass" }) |
                            @Html.ActionLink("Delete Line", "DeleteLine", new { id = line.Id })
                        </td>
                        <td></td>
                    </tr>
                    foreach (var linetime in line.LineTimes)
                    {
                        <tr class="info">
                            <td></td>
                            <td>
                                <b>@Html.DisplayFor(modelItem => linetime.Day, "CustomIntDayOfWeek") - @Html.DisplayFor(modelItem => linetime.StartTime, "CustomDoubleTimeOfDay")-@Html.DisplayFor(modelItem => linetime.EndTime, "CustomDoubleTimeOfDay")</b>
                            </td>

                            <td>
                                @Html.ActionLink("Edit Time", "EditTime", new { id = linetime.Id }, new { @class = "addtime" }) |
                                @Html.ActionLink("Delete Time", "DeleteTime", new { id = linetime.Id })
                            </td>
                        </tr>
                    }
                    
                    foreach (var tclass in line.TimetabledClasses)
                    {
                        <tr class="success">
                            <td></td>
                            <td>
                                <b>@Html.DisplayFor(modelitem => tclass.DisplayName) - Capacity: @Html.DisplayFor(modelitem => tclass.Capacity)</b>
                            </td>

                            <td>
                                @Html.ActionLink("Edit Class", "EditTimetabledClass", new { id = tclass.Id }, new { @class = "addclass" }) |
                                @Html.ActionLink("Delete Class", "DeleteTimetabledClass", new { id = tclass.Id })
                            </td>
                        </tr>
                    }
                }
            </table>

            <div id="my-dialog"></div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>